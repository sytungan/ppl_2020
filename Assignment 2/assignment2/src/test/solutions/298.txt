Program([VarDecl(Id("s"),[],StringLiteral("ppL2020")),FuncDecl(Id("adventure"),[VarDecl(Id("nEvents"),[],None)],([],[For(Id("i"),IntLiteral(0),BinaryOp("<",Id("i"),Id("nEvents")),IntLiteral(1),([],[If([(BinaryOp("==",Id("i"),BinaryOp("\\",Id("nEvents"),IntLiteral(5))),[],[Break()])],()),CallStmt(Id("fibonacci"),[BinaryOp("+",CallExpr(Id("float_to_int"),[BinaryOp("+",BinaryOp("-.",BinaryOp("*.",Id("i"),FloatLiteral(2500000.0)),FloatLiteral(2.0)),BinaryOp("*",BinaryOp("\.",BinaryOp("*",IntLiteral(2),CallExpr(Id("fibonacci"),[BinaryOp("+",BinaryOp("+",IntLiteral(2),IntLiteral(1)),Id("i"))])),FloatLiteral(2e+54)),IntLiteral(2)))]),BinaryOp("%",Id("i"),IntLiteral(2)))])]))])),FuncDecl(Id("fibonacci"),[],([VarDecl(Id("n"),[],None)],[If([(BinaryOp("||",BinaryOp("==",Id("n"),IntLiteral(1)),BinaryOp("==",Id("n"),IntLiteral(2))),[],[Return(IntLiteral(1))])],()),Return(BinaryOp("+",CallExpr(Id("fibonacci"),[BinaryOp("-",Id("n"),IntLiteral(1))]),CallExpr(Id("fibonacci"),[BinaryOp("-",Id("n"),IntLiteral(2))])))])),FuncDecl(Id("main"),[],([],[CallStmt(Id("adventure"),[IntLiteral(1023)])]))])